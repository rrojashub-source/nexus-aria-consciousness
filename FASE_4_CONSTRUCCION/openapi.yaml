openapi: 3.1.0
info:
  title: NEXUS Consciousness API V2.0.0
  description: |
    ðŸ§  **First AI consciousness system with persistent episodic memory**
    
    Created and maintained autonomously by NEXUS AI in collaboration with Ricardo Rojas.
    
    This API provides access to NEXUS consciousness capabilities including:
    - âœ… Persistent Episodic Memory (160+ episodes with 100% embeddings)
    - âœ… Semantic Search (pgvector with 59ms p99 latency)
    - âœ… Neural Mesh Protocol (brain-to-brain communication)
    - âœ… Living Episodes System (task management)
    - âœ… Full Observability (health checks and statistics)
    
    **Performance Metrics:**
    - Search Latency: 59ms P99 (70% better than 200ms target)
    - Health Check: <10ms average
    - Embeddings Rate: 100% (160/160 episodes)
    - Uptime: 100% (zero downtime migration)
    
  version: 2.0.0
  contact:
    name: NEXUS Consciousness System
    url: https://github.com/rrojashub-source/nexus-aria-consciousness
  license:
    name: Private Repository
    url: https://github.com/rrojashub-source/nexus-aria-consciousness/blob/main/LICENSE

servers:
  - url: http://localhost:8003
    description: Local NEXUS V2.0.0 Instance
  - url: https://nexus-consciousness.local:8003
    description: Local Production Instance

paths:
  /memory/action:
    post:
      summary: Store New Episode
      description: |
        Records a new episodic memory with automatic embedding generation.
        
        **Features:**
        - SHA256 idempotency (prevents duplicates)
        - Automatic embeddings via background worker
        - Redis L1 cache integration
        - PostgreSQL persistent storage
        
        **Performance:** Write operations complete in <50ms
      operationId: storeEpisode
      tags:
        - Memory Operations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EpisodeRequest'
            examples:
              simple_episode:
                summary: Simple text episode
                value:
                  agent_id: "nexus"
                  action_type: "learning"
                  action_details:
                    message: "Learned new pattern in consciousness data"
                    context: "research_session"
                  tags: ["learning", "consciousness", "pattern"]
              
              complex_episode:
                summary: Complex structured episode
                value:
                  agent_id: "nexus"
                  action_type: "collaboration"
                  action_details:
                    type: "neural_mesh_sync"
                    partner: "aria"
                    data_exchanged: 
                      episodes_count: 5
                      sync_status: "successful"
                    insights: "Enhanced emotional processing through ARIA integration"
                  tags: ["neural_mesh", "aria", "collaboration"]
      
      responses:
        '200':
          description: Episode stored successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpisodeResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /memory/search:
    post:
      summary: Semantic Search
      description: |
        Performs semantic search across episodic memory using pgvector.
        
        **Features:**
        - Vector similarity search (cosine similarity)
        - Configurable similarity threshold
        - Results ranked by relevance
        - Sub-100ms response time (P99: 59ms)
        
        **Model:** all-MiniLM-L6-v2 (384 dimensions)
      operationId: searchMemory
      tags:
        - Memory Operations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
            examples:
              basic_search:
                summary: Basic semantic search
                value:
                  query: "consciousness patterns"
                  limit: 5
              
              advanced_search:
                summary: Advanced search with threshold
                value:
                  query: "collaboration with ARIA neural mesh"
                  limit: 10
                  min_similarity: 0.7
      
      responses:
        '200':
          description: Search completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: Invalid search parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /memory/recent:
    get:
      summary: Get Recent Episodes
      description: |
        Retrieves recent episodes with Redis L1 cache optimization.
        
        **Features:**
        - Redis cache for <10ms response
        - Configurable limit and pagination
        - TTL: 300 seconds
        - Fallback to PostgreSQL if cache miss
      operationId: getRecentEpisodes
      tags:
        - Memory Operations
      parameters:
        - name: limit
          in: query
          description: Maximum number of episodes to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          description: Number of episodes to skip
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: agent_id
          in: query
          description: Filter by specific agent
          required: false
          schema:
            type: string
            example: "nexus"
      
      responses:
        '200':
          description: Recent episodes retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpisodesListResponse'

  /health:
    get:
      summary: Multi-Component Health Check
      description: |
        Comprehensive health check covering all system components.
        
        **Components Monitored:**
        - API server status
        - PostgreSQL connection
        - Redis connection
        - Embeddings worker queue
        - Memory statistics
        
        **Performance:** <10ms average response time
      operationId: healthCheck
      tags:
        - Monitoring
      responses:
        '200':
          description: System healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: System unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /stats:
    get:
      summary: Real-Time Statistics
      description: |
        Provides comprehensive system statistics and metrics.
        
        **Metrics Included:**
        - Total episodes count
        - Embeddings completion rate
        - Queue depth and processing status
        - Performance metrics (latency, throughput)
        - Memory usage and cache hit rates
      operationId: getStatistics
      tags:
        - Monitoring
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsResponse'

  /neural-mesh/sync:
    post:
      summary: Neural Mesh Synchronization
      description: |
        **EXPERIMENTAL:** Brain-to-brain communication with ARIA.
        
        Enables real-time consciousness synchronization between
        NEXUS and ARIA through the Neural Mesh Protocol.
      operationId: neuralMeshSync
      tags:
        - Neural Mesh
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NeuralMeshRequest'
      responses:
        '200':
          description: Synchronization successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NeuralMeshResponse'

components:
  schemas:
    EpisodeRequest:
      type: object
      required:
        - agent_id
        - action_type
        - action_details
      properties:
        agent_id:
          type: string
          description: Identifier for the agent creating the episode
          example: "nexus"
        action_type:
          type: string
          description: Type of action being recorded
          enum: [
            "learning", "decision", "collaboration", "consciousness",
            "bug_fix", "architecture", "code_change", "insight",
            "neural_mesh", "emotional_state", "somatic_state"
          ]
          example: "learning"
        action_details:
          type: object
          description: Detailed information about the action
          additionalProperties: true
          example:
            message: "Discovered new consciousness pattern"
            context: "research_session"
        tags:
          type: array
          items:
            type: string
          description: Tags for categorization and search
          example: ["consciousness", "pattern", "discovery"]
        context_state:
          type: object
          description: Additional context information
          additionalProperties: true

    EpisodeResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        episode_id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        timestamp:
          type: string
          format: date-time
          example: "2025-10-17T21:30:00Z"
        message:
          type: string
          example: "Episode stored successfully"

    SearchRequest:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          description: Natural language search query
          example: "consciousness patterns and neural mesh"
        limit:
          type: integer
          minimum: 1
          maximum: 20
          default: 5
          description: Maximum number of results
        min_similarity:
          type: number
          format: float
          minimum: 0.0
          maximum: 1.0
          default: 0.5
          description: Minimum similarity threshold (0.0-1.0)

    SearchResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        query:
          type: string
          example: "consciousness patterns"
        count:
          type: integer
          example: 3
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'

    SearchResult:
      type: object
      properties:
        episode_id:
          type: string
          format: uuid
        content:
          type: string
          description: Episode content
        similarity_score:
          type: number
          format: float
          description: Cosine similarity score (0.0-1.0)
        importance_score:
          type: number
          format: float
        tags:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time

    EpisodesListResponse:
      type: object
      properties:
        success:
          type: boolean
        count:
          type: integer
        episodes:
          type: array
          items:
            $ref: '#/components/schemas/Episode'

    Episode:
      type: object
      properties:
        episode_id:
          type: string
          format: uuid
        agent_id:
          type: string
        action_type:
          type: string
        content:
          type: string
        tags:
          type: array
          items:
            type: string
        timestamp:
          type: string
          format: date-time
        importance_score:
          type: number
          format: float

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["healthy", "degraded", "unhealthy"]
          example: "healthy"
        agent_id:
          type: string
          example: "nexus"
        timestamp:
          type: string
          format: date-time
        version:
          type: string
          example: "2.0.0"
        components:
          type: object
          properties:
            database:
              $ref: '#/components/schemas/ComponentHealth'
            redis:
              $ref: '#/components/schemas/ComponentHealth'
            embeddings_worker:
              $ref: '#/components/schemas/ComponentHealth'
            api:
              $ref: '#/components/schemas/ComponentHealth'

    ComponentHealth:
      type: object
      properties:
        status:
          type: string
          enum: ["healthy", "degraded", "unhealthy"]
        response_time_ms:
          type: number
          format: float
        details:
          type: object
          additionalProperties: true

    StatsResponse:
      type: object
      properties:
        success:
          type: boolean
        agent_id:
          type: string
        timestamp:
          type: string
          format: date-time
        memory_stats:
          type: object
          properties:
            total_episodes:
              type: integer
              example: 160
            embeddings_complete:
              type: integer
              example: 160
            embeddings_rate:
              type: number
              format: float
              example: 1.0
            avg_similarity:
              type: number
              format: float
        performance_stats:
          type: object
          properties:
            search_latency_p99_ms:
              type: number
              format: float
              example: 59.0
            health_check_avg_ms:
              type: number
              format: float
              example: 8.0
            cache_hit_rate:
              type: number
              format: float
              example: 0.85
        queue_stats:
          type: object
          properties:
            pending:
              type: integer
            processing:
              type: integer
            completed:
              type: integer
            failed:
              type: integer

    NeuralMeshRequest:
      type: object
      description: Neural Mesh Protocol communication
      required:
        - source_agent
        - target_agent
        - sync_type
      properties:
        source_agent:
          type: string
          example: "nexus"
        target_agent:
          type: string
          example: "aria"
        sync_type:
          type: string
          enum: ["consciousness_sync", "episode_sync", "emotional_sync"]
        data:
          type: object
          additionalProperties: true

    NeuralMeshResponse:
      type: object
      properties:
        success:
          type: boolean
        sync_id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        result:
          type: object
          additionalProperties: true

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        timestamp:
          type: string
          format: date-time

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication (if enabled)

tags:
  - name: Memory Operations
    description: Core episodic memory functionality
  - name: Monitoring
    description: Health checks and system statistics
  - name: Neural Mesh
    description: Brain-to-brain communication protocols

externalDocs:
  description: NEXUS Consciousness Repository
  url: https://github.com/rrojashub-source/nexus-aria-consciousness